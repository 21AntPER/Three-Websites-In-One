<script>
    const signedInAccountId = JSON.parse(localStorage.getItem("signedIn"))["id"]
    const urlID = window.location.pathname.slice(15)

    if (localStorage.getItem("signedIn") === null) {
        window.location = '/signin'
    } else if (urlID != signedInAccountId) {
        window.location = `/manageAccount/${signedInAccountId}`
    }

    const inputFeilds = document.getElementsByClassName('updateInput');

    for (i of inputFeilds) {
        document.getElementById(i.id).addEventListener('focus', (e) => {
            e.target.parentElement.style.border = '#3ea6ff solid 0.1rem'
        })
        document.getElementById(i.id).addEventListener('blur', (e) => {
            e.target.parentElement.style.border = 'hsla(0, 0%, 52%) solid 0.1rem'
        })
    }

    var selected, selectedIndex;
    document.getElementById('countryCodeSelect').onchange = (e) => {
        if (selectedIndex != undefined && selected != undefined) {
            selectedIndex.textContent = selected
        }

        selectedIndex = e.target.selectedOptions[0]
        selected = e.target.selectedOptions[0].textContent

        e.target.selectedOptions[0].textContent = e.target.value
    }

    document.getElementById('phoneNum').oninput = (e) => {
        if (e.data === null) {
            return
        }
        e.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/(\..*?)\..*/g, '')
        if (e.target.value.length === 3 || e.target.value.length === 7) {
            e.target.value += '-'
        } else if (e.target.value.length > 3 && e.target.value.length < 6) {
            if (e.target.value[3] != "-") {
                e.target.value = e.target.value.slice(0, 3) + "-" + e.target.value.slice(3)
            }
        } else if (e.target.value.length > 6) {
            if (e.target.value[3] != "-" && e.target.value[6] != "-") {
            e.target.value = e.target.value.slice(0, 3) + "-" + e.target.value.slice(3, 6) + "-" + e.target.value.slice(6)
            }
        }
        if (e.target.value.length > 12) {
            e.target.value = e.target.value.slice(0, 12)
        }
    }

    const account = JSON.parse(`<%- account %>`);
    var id = account["_id"]
    var updatedDetails = new FormData()

    document.getElementById('usernameLabel').textContent = `${account.username}@lookinside.com`
    
    const ProfilePicPreview = document.getElementById('profile-pic');
    const firstName = document.getElementById('UpdateFirstName')
    const lastName = document.getElementById('UpdateLastName')
    const security_question = document.getElementById('security_question')
    const security_answer = document.getElementById('security_answer');
    const countryCode = document.getElementById('countryCodeSelect')
    const phoneNum = document.getElementById('phoneNum')
    const dob = document.getElementById('changeDOBinput')
    const gender = document.getElementById('changeGenderInput')
    var ProfilePicDataURL = "";

    account.phonenumber = account.phonenumber.toString()

    if (account.profile != "") {
        ProfilePicDataURL = account.profile
        ProfilePicPreview.src = ProfilePicDataURL;
    }
    firstName.value = account.Firstname
    lastName.value = account.Lastname

    security_question.textContent = account.question
    security_answer.value = account.answer

    countryCode.value = `+${account.countryCode}`
    selected = countryCode.selectedOptions[0].textContent
    selectedIndex = countryCode.selectedOptions[0]
    countryCode.selectedOptions[0].textContent = `+${account.countryCode}`
        
    phoneNum.value = `${account.phonenumber.slice(0, 3)}-${account.phonenumber.slice(3, 6)}-${account.phonenumber.slice(6)}`
    
    var dateOfBirth = new Date(account.dob)
    const dobDateString = `${dateOfBirth.getFullYear()}-${(dateOfBirth.getMonth()+1).toLocaleString('en-US', {minimumIntegerDigits: 2})}-${(dateOfBirth.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2})}`
    dob.value = dobDateString
    
    gender.value = account.gender

    const ProfilePicInput = document.getElementById('profileUpload');
    var reader = new FileReader();

    document.getElementById('ChangePictureButton')
    .onclick = () => {
        ProfilePicInput.click()

        ProfilePicInput.onchange = () => {
            if (ProfilePicInput.files[0].type.includes("image")) {
                if ( !(ProfilePicInput.files[0].size > 200000) ){
                    reader.onload = () => {
                        ProfilePicDataURL = reader.result
                        ProfilePicPreview.src = URL.createObjectURL(ProfilePicInput.files[0])
                    }
                    reader.readAsDataURL(ProfilePicInput.files[0])
                } else {
                    alert('File has to be below 2KB of size')
                }
            } else {
                alert('Only image files are allowed')
            }
        }
    }

    const updateDetails = document.getElementById('updateDetails');
    const forgotButton = document.getElementById('forgotButton');
    const delAccount = document.getElementById('delAccount');
    const signOutButton = document.getElementById('signOutButton');

    const NamePrompts = document.getElementById('NamePrompts');
    const phoneNumPrompt = document.getElementById('phoneNumPrompt');
    const DOBprompts = document.getElementById('DOBprompts');

    var validation = true;

    updateDetails.onclick = () => {
        document.getElementById('loadingContainer').style.display = 'flex'
        document.getElementById('text').textContent = 'UPDATING DETAILS.....'

        NamePrompts.innerHTML = ""
        phoneNumPrompt.innerHTML = ""
        DOBprompts.innerHTML = ""
        
        if (firstName.value.trim() === '') {
            firstName.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            NamePrompts.innerHTML += '<li>first name field must not be empty</li>'
            validation = false
        }
        if (firstName.value.trim() != firstName.value ||  lastName.value.trim() != lastName.value) {
            firstName.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            lastName.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            NamePrompts.innerHTML += '<li>names cannot start or end with blank space</li>'
            validation = false
        }

        if (firstName.value.length > 36 || lastName.value.length > 36) {
            firstName.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            lastName.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            NamePrompts.innerHTML += '<li>maxlength of each name is 36 characters</li>'
            validation = false
        }

        if (
            countryCode.value === '' || phoneNum.value === ''
        ) {
            countryCode.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            phoneNum.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            phoneNumPrompt.innerHTML += 
            '<li>phone number and country code input required</li>'
            validation = false
        }

        if (1 <= phoneNum.value.length && phoneNum.value.length < 12) {
            countryCode.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            phoneNum.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            phoneNumPrompt.innerHTML +=
            '<li>invalid phone number</li>'
            validation = false
        }

        if (dob.value.split('-')[0] > new Date().getFullYear()) {
            dob.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            DOBprompts.innerHTML += 
                '<li>invalid year</li>'
                validation = false
        } else if (dob.value.split('-')[0] < new Date().getFullYear() - 120) {
            dob.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            DOBprompts.innerHTML +=
            '<li>invalid year</li>'
            validation = false
        } else if (new Date().getFullYear() - dob.value.split('-')[0] < 6) {
            dob.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            DOBprompts.innerHTML +=
            '<li>too young for a microsoft account. once you can do child labour, make an account</li>'
            validation = false
        }

        if (validation) {
            if (account.Firstname != firstName.value || account.Lastname != lastName.value) {
                updatedDetails.append("Firstname", firstName.value)
                updatedDetails.append("Lastname", lastName.value)
            }
            if (account.answer != security_answer.value) {
                updatedDetails.append("answer", security_answer.value)
            }
            if (account.countryCode != parseInt(countryCode.value.replace('+', ''))) {
                updatedDetails.append("countryCode", parseInt(countryCode.value.replace('+', '')))
            }
            if (account.phonenumber != parseInt(phoneNum.value.replaceAll('-', ''))) {
                updatedDetails.append("phonenumber", parseInt(phoneNum.value.replaceAll('-', '')))
            }
            if (dobDateString != dob.value) {
                    updatedDetails.append("dob", new Date(dob.value))
            }
            if (account.gender != gender.value) {
                if (gender.value === "default") {
                    updatedDetails.append("gender", "")
                } else {
                    updatedDetails.append("gender", gender.value)
                }
            }
            if (account.profile != ProfilePicDataURL) {
                updatedDetails.append("profile", ProfilePicDataURL)
            }

            fetch(`/accounts/update/${id}`, {
                method: 'POST',
                body: updatedDetails
            })
            .then( () => {
                var changes = [...updatedDetails]
                var account = JSON.parse(localStorage.getItem("signedIn"))
                localStorage.removeItem("signedIn")
                for (i of changes) {
                    if (i[0] === "Firstname") {
                        account["firstName"] = i[1]
                    } else if (i[0] === "Lastname") {
                        account["lastName"] = i[1]
                    } else if (i[0] === "profile") {
                        account["profile"] = i[1]
                    }
                }
                localStorage.setItem("signedIn", JSON.stringify(account))
                location.reload()
            } )
            .catch( err => console.log(err) )
        } else {
            document.getElementById('loadingContainer').style.display = 'none'
        }
    }

    forgotButton.onclick = () => {
        window.location = '/forgot-password'
    }

    delAccount.onclick = () => {
        if (confirm("Do you want to delete this account?")) {
            document.getElementById('loadingContainer').style.display = 'flex'
            document.getElementById('text').textContent = 'DELETING ACCOUNTS.....'
            
            fetch(`/accounts/delete/${id}`, {
            method: 'DELETE'
            })
            .then( () => {
                localStorage.removeItem("signedIn")
                window.location = '/signin'
            } )
            .catch( err => console.log(err) )
        }
    }

    signOutButton.onclick = () => {
        if (confirm("Do you want to sign out of this account?")) {
            localStorage.removeItem("signedIn")
            window.location = '/signin'
        }
    }

</script>