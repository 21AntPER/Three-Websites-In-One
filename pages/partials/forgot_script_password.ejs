<script>
    window.onload = () => {document.querySelector('input[type="checkbox"]').checked = false}

    const accounts = JSON.parse(`<%- accounts %>`);

    const username = document.getElementById('email-input');
    const changeRecoveryEmail = document.getElementById('securityQA-authentication');
    const testNumber = document.getElementById('testNumber');
    const countryCodeSelect = document.getElementById('countryCodeSelect');
    const phoneNum = document.getElementById('phoneNum');
    const nextFromUsername = document.getElementById('next-username');
    const nextFromRecovery = document.getElementById('next-password');
    const QuestionLabel = document.getElementById('security_question');
    const security_answer = document.getElementById('security_answer');
    const ResetPassword = document.getElementById('ResetPassword');

    var account;

    const usernamePrompts = document.getElementById('emailError');
    const phoneNumPrompts = document.getElementById('phoneNumPrompt');
    const securityQAPrompts = document.getElementById('securityQAPrompts');
    const PasswordPrompts = document.getElementById('PasswordPrompts');

    document.querySelector('input[type="checkbox"]')
    .onchange = (e) => {
        if (e.target.checked) {
            document.getElementById('Createpassword').type = 'text';
            document.getElementById('confirm-password').type = 'text';
        } else {
            document.getElementById('Createpassword').type = 'password';
            document.getElementById('confirm-password').type = 'password';
        }
    }

    for (i of document.getElementsByClassName("input-feilds")) {
        document.getElementById(i.id).onfocus = (e) => {
            e.target.parentElement.style.border = '#3ea6ff solid 0.1rem'
        }
        document.getElementById(i.id).onblur = (e) => {
            e.target.parentElement.style.border = 'hsla(0, 0%, 52%) solid 0.1rem'
        } 
    }
    
    var selected, selectedIndex;

    countryCodeSelect.onchange = (e) => {
        if (selectedIndex != undefined && selected != undefined) {
            selectedIndex.textContent = selected
        }

        selectedIndex = e.target.selectedOptions[0]
        selected = e.target.selectedOptions[0].textContent
        
        e.target.selectedOptions[0].textContent = e.target.value
    }

    phoneNum.oninput = (e) => {
        if (e.data === null) {
            return
        }
        e.target.value = e.target.value.replace(/[^0-9]/g, '').replace(/(\..*?)\..*/g, '$1')
        if (e.target.value.length === 3 || e.target.value.length === 7) {
            e.target.value += '-'
        } else if (e.target.value.length > 3 && e.target.value.length < 6) {
            if (e.target.value[3] != "-") {
                e.target.value = e.target.value.slice(0, 3) + "-" + e.target.value.slice(3)
            }
        } else if (e.target.value.length > 6) {
            if (e.target.value[3] != "-" && e.target.value[6] != "-") {
            e.target.value = e.target.value.slice(0, 3) + "-" + e.target.value.slice(3, 6) + "-" + e.target.value.slice(6)
            }
        }
        if (e.target.value.length > 12) {
            e.target.value = e.target.value.slice(0, 12)
        }
    }

    nextFromUsername.onclick = () => {
        var usernameValue = username.value
        if (usernameValue.includes("@lookinside.com")) {
            usernameValue = usernameValue.slice(0, usernameValue.indexOf("@lookinside.com") )
        }
        for (i of accounts) {
            if (i.username === usernameValue) {
                account = i
            }
        }
        if (account != undefined) {
            username.parentElement.style.display = 'none'
            usernamePrompts.style.display = 'none'
            document.getElementById('emailPrompt').style.display = 'none'
            nextFromUsername.style.display = 'none'
            testNumber.style.display = 'inline-block'
            changeRecoveryEmail.style.display = 'inline-block'
            QuestionLabel.innerHTML = account.question
            nextFromRecovery.style.display = 'inline-block'
            document.getElementsByClassName('text')[0].textContent = 'User Authentication'

        } else {
            username.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            usernamePrompts.innerHTML =
            "<li>username doesn't exist</li>"
        }
    }

    const nextFromAccount = document.getElementById('next-account');
    const createPassword = document.getElementById('Createpassword');
    const confirmPassword = document.getElementById('confirm-password');

    nextFromRecovery.onclick = () => {
        var validation = true;
        if (
            account.countryCode != countryCodeSelect.value || 
            account.phonenumber != phoneNum.value.replaceAll("-", "")
            ) {
            countryCodeSelect.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            phoneNum.style.border = 'rgb(255, 87, 87) solid 0.1rem'

            phoneNumPrompts.innerHTML =
            "<li>incorrect phone number</li>"
            validation = false
        }
        if (account.answer != security_answer.value.toLowerCase()) {
            security_answer.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'

            securityQAPrompts.innerHTML =
            "<li>incorrect answer</li>"
            validation = false
        }

        console.log(validation)
        
        if (validation) {
            console.log("E")
            testNumber.style.display = 'none'
            changeRecoveryEmail.style.display = 'none'
            nextFromRecovery.style.display = 'none'
            phoneNumPrompts.style.display = 'none'
            securityQAPrompts.style.display = 'none'
            document.getElementById('emailContainer').style.paddingTop = '0.35rem'
            ResetPassword.style.display = 'flex'
            PasswordPrompts.style.display = 'inline-block'
            nextFromAccount.style.display = 'block'
            document.getElementsByClassName('text')[0].textContent = 'Reset Password'
        }
    }

    nextFromAccount.onclick =() => {
        var validation = true
        PasswordPrompts.innerHTML = ''
        if (createPassword.value.trim() === '') {
            createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            PasswordPrompts.innerHTML += 
            '<li>passwords fields cannot be empty</li>'
            validation = false
        } else {
            if (createPassword.value.length < 8) {
                createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                PasswordPrompts.innerHTML += 
                '<li>password must be of length 8 characters or more</li>'
                validation = false
            }

            if (
                createPassword.value.replace(/[0-9a-zA-Z]/g, '').replace(' ', '') === '' ||
                createPassword.value.replace(/[^a-z^A-Z]/g, '').replace(' ', '') === '' ||
                createPassword.value.replace(/[^0-9]/g, '').replace(' ', '') === ''
            ) {
                createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                PasswordPrompts.innerHTML += 
                '<li>passwords must contain some mix of letters, numbers, and symbols</li>'
                validation = false
            }

            if (createPassword.value.includes(' ')) {
                createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                PasswordPrompts.innerHTML += 
                '<li>passwords cannot contain blank spaces</li>'
                validation = false
            }

            if ( 
                createPassword.value.replace(/[^a-z]/g, '').length === 0 ||
                createPassword.value.replace(/[^A-Z]/g, '').length === 0
            ) {
                createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                PasswordPrompts.innerHTML += 
                '<li>passwords must contain uppercase and lowercase letters</li>'
                validation = false
            }

            if (confirmPassword.value.trim() === '') {
            confirmPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
            PasswordPrompts.innerHTML += 
            '<li>you must confirm your password</li>'
            validation = false
            } else if (createPassword.value != confirmPassword.value) {
                createPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                confirmPassword.parentElement.style.border = 'rgb(255, 87, 87) solid 0.1rem'
                PasswordPrompts.innerHTML += 
                '<li>passwords do not match</li>'
                validation = false
            }
        }

        if (validation) {
            var password  = new FormData()
            password.append("password", createPassword.value)
            fetch(`accounts/password/update/${account._id}`, {
                method: 'POST',
                body: password
            })
            .then(() => {
                if (localStorage.getItem('signedIn') === account._id) {
                    localStorage.removeItem('signedIn')
                }
                console.log("RESETED")
                window.location = '/signin'
            })
            .catch( err => console.log(err) )
        }
    }

    document.getElementById("emailPrompt").children[0].onclick = () => {
        window.location = '/forgot-email'
    }
</script>